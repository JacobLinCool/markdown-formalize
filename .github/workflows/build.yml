name: Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to build"
        required: true
        type: string

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Pnpm
        uses: pnpm/action-setup@v4

      - name: Install Dependencies
        run: pnpm install

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: pnpm build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: pnpm build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest'
        run: pnpm build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: markdown-formalize-${{ inputs.version }}-${{ matrix.os }}
          path: |
            dist/*.exe
            dist/*.msi
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
            dist/*.snap
          if-no-files-found: ignore

  release:
    needs: build
    runs-on: ubuntu-latest
    if: success()
    permissions:
      contents: write
      discussions: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ inputs.version }}
          name: Release v${{ inputs.version }}
          draft: false
          prerelease: false
          files: |
            artifacts/**/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
